name: Calibre News Conversion
run-name: 'Calibre News Conversion: ${{ github.ref_name }}'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  converter:
    runs-on: ubuntu-latest
    env:
      output: converted_ebooks
      publisher: bookfere.com
      author: Calibre News Delivery
      ext: ${{ secrets.FORMAT || 'epub' }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install Calibre
        run: |
          sudo apt-get update
          sudo apt-get install libegl1 libopengl0 libxcb-cursor0
          url=https://download.calibre-ebook.com/linux-installer.sh
          sudo -v && wget -nv -O- $url | sudo sh /dev/stdin
      
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Find and Validate Recipes
        run: |
          # 创建输出目录
          mkdir -p $output
          
          # 查找所有的 recipe 文件
          find . -name "*.recipe" -type f > recipe_list.txt
          
          # 检查是否找到了 recipe 文件
          if [ ! -s recipe_list.txt ]; then
            echo "No recipe files found"
            exit 1
          fi
          
          echo "Found recipes:"
          cat recipe_list.txt
      
      - name: Convert Recipes to Ebooks
        run: |
          # 简化的转换函数
          convert_recipe() {
            local recipe_file="$1"
            local base_name=$(basename "$recipe_file" .recipe)
            
            echo "Converting: $recipe_file"
            
            # 基本转换参数
            args=()
            args+=(--authors="$author")
            args+=(--publisher="$publisher")
            
            # 检查是否存在对应的封面和样式文件
            if [ -f "covers/${base_name}.png" ]; then
              args+=(--cover="covers/${base_name}.png")
            fi
            
            if [ -f "styles/${base_name}.css" ]; then
              args+=(--extra-css="styles/${base_name}.css")
            fi
            
            # 执行转换
            ebook-convert "$recipe_file" "${base_name}.${ext}" "${args[@]}"
            
            # 直接将文件移动到输出目录，不重命名
            if [ -f "${base_name}.${ext}" ]; then
              mv "${base_name}.${ext}" "$output/"
              echo "Successfully converted: $base_name.${ext}"
            else
              echo "Failed to convert: $recipe_file"
              return 1
            fi
          }
          
          # 导出函数和环境变量
          export -f convert_recipe
          export output author publisher ext
          
          # 并行转换所有食谱
          cat recipe_list.txt | xargs -I {} -P 2 bash -c 'convert_recipe "$@"' _ {}
          
          # 统计结果
          count=$(ls -1 "$output"/*."${ext}" 2>/dev/null | wc -l || echo 0)
          echo "Successfully converted ebooks: $count"
          
          if [ $count -eq 0 ]; then
            echo "Warning: No ebooks were generated"
          fi
      
      - name: List Generated Files
        run: |
          echo "Generated files in $output:"
          ls -la "$output/" || echo "No files generated"
      
      - name: Upload Ebooks as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: News-Ebooks
          path: ${{ env.output }}
          retention-days: 7添加一个功能保存转换成功的ebooks到根目录
